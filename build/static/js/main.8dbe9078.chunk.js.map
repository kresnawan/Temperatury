{"version":3,"sources":["components/Main.js","App.js","index.js"],"names":["Main","useState","celcius","setCelcius","reamur","setReamur","fahrenheit","setFahrenheit","kelvin","setKelvin","round","x","Math","floor","a","toString","c","split","b","slice","parseFloat","useEffect","document","title","className","htmlFor","type","autoComplete","id","value","onChange","e","index","target","valueAsNumber","isNaN","href","rel","icon","faGithub","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8dbe9078.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faFacebook } from '@fortawesome/free-brands-svg-icons'\r\nimport { useState, useEffect } from 'react'\r\nimport '../css/styles.css'\r\n\r\nconst Main = () => {\r\n\r\n    const [celcius, setCelcius] =  useState();\r\n    const [reamur, setReamur] = useState();\r\n    const [fahrenheit, setFahrenheit] = useState();\r\n    const [kelvin, setKelvin] = useState();\r\n\r\n    useEffect(() =>{\r\n        document.title = \"Temperatury\";\r\n    }, []);\r\n\r\n    function round( x ) {\r\n        // Digunakan untuk membulatkan bilangan\r\n        // Supaya angka dibelakang koma tidak terlalu banyak\r\n\r\n        if ( x % Math.floor(x) === 0 ) {\r\n            return x;\r\n        } else if (x === 0) {\r\n            return 0;\r\n        } else {\r\n            const a = x.toString(10);\r\n            const c = a.split(\".\")[0];\r\n            const b = a.split(\".\")[1].slice(0, 1);\r\n    \r\n            const d = c + \".\" + b;\r\n\r\n            return parseFloat(d);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"container\">\r\n                <div className=\"content\">\r\n                    <div className=\"header\">\r\n                        <h2>Anjay</h2>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <div className=\"temp\">\r\n                            <label htmlFor=\"celcius\">Celcius: </label>\r\n                            <input type=\"number\" autoComplete=\"off\" id=\"celcius\" value={ celcius } onChange={ (e) => {\r\n                                                                                                                                                 \r\n                                var index = e.target.valueAsNumber;\r\n                                \r\n                                if (isNaN(index)) {\r\n                                    index = \"\";\r\n                                } else {\r\n                                    index = e.target.valueAsNumber;\r\n                                }\r\n                                \r\n                                setCelcius(index)\r\n                                setReamur(round((4 / 5) * index));\r\n                                setFahrenheit(round((9 / 5) * index + 32))\r\n                                setKelvin(round(index + 273))\r\n\r\n                                // if (e.target.value === \"\") {\r\n                                //     e.target.value = 0;\r\n                                // }\r\n                            } } />\r\n                        </div>\r\n                        \r\n                        <div className=\"temp\">\r\n                            <label htmlFor=\"reamur\">Reamur: </label>\r\n                            <input type=\"number\" autoComplete=\"off\" id=\"reamur\" value={ reamur } onChange={ (e) => {\r\n\r\n                                var index = e.target.valueAsNumber;\r\n                                                                \r\n                                if (isNaN(index)) {\r\n                                    index = \"\";\r\n                                } else {\r\n                                    index = e.target.valueAsNumber;\r\n                                }\r\n\r\n                                setReamur(index)\r\n                                setCelcius(round((5 /4) * index))\r\n                                setFahrenheit(round((9 / 4) * index + 32))\r\n                                setKelvin(round((5 / 4) * index + 273))\r\n                            \r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"temp\">\r\n                            <label htmlFor=\"fahrenheit\">Fahrenheit: </label>\r\n                            <input type=\"number\" autoComplete=\"off\" id=\"fahrenheit\" value={ fahrenheit } onChange={e => {\r\n\r\n                                var index = e.target.valueAsNumber;\r\n                                \r\n                                if (isNaN(index)) {\r\n                                    index = \"\";\r\n                                } else {\r\n                                    index = e.target.valueAsNumber;\r\n                                }\r\n\r\n                                setFahrenheit(index)\r\n                                setCelcius(round((5 / 9) * (index - 32)))\r\n                                setReamur(round(4 / 9 * (index - 32)))\r\n                                setKelvin(round((5 / 9) * (index - 32) + 273))\r\n                            }} />\r\n                        </div>\r\n\r\n                        <div className=\"temp\">\r\n                            <label htmlFor=\"kelvin\">Kelvin: </label>\r\n                            <input type=\"number\" autoComplete=\"off\" id=\"kelvin\"  value={ kelvin } onChange={(e) => {\r\n\r\n                                var index = e.target.valueAsNumber;\r\n                                                                \r\n                                if (isNaN(index)) {\r\n                                    index = \"\";\r\n                                } else {\r\n                                    index = e.target.valueAsNumber;\r\n                                }\r\n\r\n                                setKelvin(index)\r\n                                setCelcius(round(index - 273))\r\n                                setReamur(round(4 / 5 * (index - 273)))\r\n                                setFahrenheit(round(9 / 5 * (index - 273) + 32))\r\n\r\n                            }} />\r\n                        </div>            \r\n                    </div>\r\n                    <div className=\"bottom\">\r\n                            <p>Open source at</p>\r\n                            <div className=\"icons\">\r\n                                <a href=\"https://github.com/sanjayakris/temperatury\" target=\"_blank\" rel=\"noreferrer\">\r\n                                    <FontAwesomeIcon icon={ faGithub } className=\"github icon\" />\r\n                                </a>\r\n                                {/* <a href=\"https://facebook.com/sanjayakurisu\" target=\"_blank\" rel=\"noreferrer\">\r\n                                    <FontAwesomeIcon icon={ faFacebook } className=\"facebook icon\" />\r\n                                </a> */}\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import Main from \"./components/Main.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}